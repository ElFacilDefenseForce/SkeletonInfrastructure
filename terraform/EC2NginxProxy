# Review Feedback: https://chat.openai.com/share/c5a3fb92-715c-42fb-b923-805e977dc236

terraform {
  required_providers {
    aws = {
      source  = "hashicorp/aws"
      version = "~> 3.0"
    }
  }
}

provider "aws" {
  region = "us-west-2"
}

data "aws_ami" "nginx_ami" {
  most_recent = true

  filter {
    name   = "name"
    values = ["nginx-app-protect-dos-ubuntu-22.04-v1.2-x86_64*"]
  }

  filter {
    name   = "is-public"
    values = ["true"]
  }

  owners = ["aws-marketplace"]
}

resource "aws_iam_instance_profile" "ssl_cert_access_profile" {
  name = "SSLCertAccessProfile"
  role = "SSLCertAccess"
}

resource "aws_instance" "nginx_instance" {
  ami           = data.aws_ami.nginx_ami.id
  instance_type = "t3.micro"
  key_name      = "Shadrach"
  security_groups = [aws_security_group.nginx_sg.name]
  iam_instance_profile = aws_iam_instance_profile.ssl_cert_access_profile.name


  user_data = <<-EOF
    #!/bin/bash
    sudo apt update
    sudo apt install -y nginx
    sudo apt-get install -y awscli jq
    aws secretsmanager get-secret-value --secret-id derektank.com_SSL --region us-west-2 --query SecretString --output text | jq -r .certificate > /etc/nginx/ssl/fullchain.pem
    aws secretsmanager get-secret-value --secret-id derektank.com_SSL --region us-west-2 --query SecretString --output text | jq -r .privateKey > /etc/nginx/ssl/privkey.pem
    cat <<EOT > /etc/nginx/sites-available/default
# Personal Web Site Server Block
    server {
      listen 80;
      server_name www.derektank.com derektank.com;
      location / {
        proxy_pass http://44.213.132.37;
        proxy_set_header Host \$host;
        proxy_set_header X-Real-IP \$remote_addr;
        proxy_set_header X-Forwarded-For \$proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto \$scheme;
      }
    }
#/* Taiga Web App Server Block
#    server {
#      listen 80;
#      server_name taiga.derektank.com;
#      location / {
#        proxy_pass http://<Another-EC2-Instance-IP>;
#        proxy_set_header Host \$host;
#        proxy_set_header X-Real-IP \$remote_addr;
#        proxy_set_header X-Forwarded-For \$proxy_add_x_forwarded_for;
#        proxy_set_header X-Forwarded-Proto \$scheme;
#      }
#    }
#*/
    server {
      listen 80;
      server_name derektank.com;
      return 301 http://www.derektank.com$request_uri;
    }
    EOT
    sudo systemctl restart nginx
    EOF


  tags = {
    Name = "NGINXProxy"
  }
}

output "nginx_instance_ip" {
  value = aws_instance.nginx_instance.public_ip
}
